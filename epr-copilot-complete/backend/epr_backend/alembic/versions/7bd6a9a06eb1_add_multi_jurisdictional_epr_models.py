"""Add multi-jurisdictional EPR models

Revision ID: 7bd6a9a06eb1
Revises: 
Create Date: 2025-07-02 01:42:58.297221

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7bd6a9a06eb1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jurisdictions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('effective_date', sa.DateTime(), nullable=True),
    sa.Column('model_type', sa.String(length=50), nullable=True),
    sa.Column('small_producer_revenue_threshold', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('small_producer_tonnage_threshold', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('calculated_fees',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('producer_id', sa.String(), nullable=True),
    sa.Column('jurisdiction_id', sa.String(), nullable=True),
    sa.Column('calculation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('total_fee', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_id'], ['jurisdictions.id'], ),
    sa.ForeignKeyConstraint(['producer_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eco_modification_rules',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('jurisdiction_id', sa.String(), nullable=True),
    sa.Column('rule_name', sa.String(length=255), nullable=True),
    sa.Column('rule_type', sa.String(length=50), nullable=True),
    sa.Column('logic_definition', sa.JSON(), nullable=True),
    sa.Column('effective_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_id'], ['jurisdictions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('material_categories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('parent_id', sa.String(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('jurisdiction_id', sa.String(), nullable=True),
    sa.Column('recyclable', sa.Boolean(), nullable=True),
    sa.Column('contains_plastic', sa.Boolean(), nullable=True),
    sa.Column('disrupts_recycling', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_id'], ['jurisdictions.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['material_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('producer_profiles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('organization_id', sa.String(), nullable=True),
    sa.Column('jurisdiction_id', sa.String(), nullable=True),
    sa.Column('annual_revenue', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('annual_tonnage', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('is_small_producer', sa.Boolean(), nullable=True),
    sa.Column('qualifies_for_low_volume_fee', sa.Boolean(), nullable=True),
    sa.Column('has_lca_disclosure', sa.Boolean(), nullable=True),
    sa.Column('has_environmental_impact_reduction', sa.Boolean(), nullable=True),
    sa.Column('uses_reusable_packaging', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_id'], ['jurisdictions.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calculation_steps',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('calculated_fee_id', sa.String(), nullable=True),
    sa.Column('step_number', sa.Integer(), nullable=True),
    sa.Column('step_name', sa.String(length=100), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('rule_applied', sa.String(length=255), nullable=True),
    sa.Column('legal_citation', sa.Text(), nullable=True),
    sa.Column('calculation_method', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calculated_fee_id'], ['calculated_fees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commodity_values',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('jurisdiction_id', sa.String(), nullable=True),
    sa.Column('material_category_id', sa.String(), nullable=True),
    sa.Column('month_year', sa.String(length=7), nullable=True),
    sa.Column('average_value', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_id'], ['jurisdictions.id'], ),
    sa.ForeignKeyConstraint(['material_category_id'], ['material_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fee_rates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('jurisdiction_id', sa.String(), nullable=True),
    sa.Column('material_category_id', sa.String(), nullable=True),
    sa.Column('rate_per_unit', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('unit_type', sa.String(length=20), nullable=True),
    sa.Column('effective_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('rate_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_id'], ['jurisdictions.id'], ),
    sa.ForeignKeyConstraint(['material_category_id'], ['material_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packaging_components',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('product_id', sa.String(), nullable=True),
    sa.Column('material_category_id', sa.String(), nullable=True),
    sa.Column('component_name', sa.String(length=255), nullable=True),
    sa.Column('weight_per_unit', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('weight_unit', sa.String(length=10), nullable=True),
    sa.Column('recycled_content_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('contains_pfas', sa.Boolean(), nullable=True),
    sa.Column('contains_phthalates', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['material_category_id'], ['material_categories.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('packaging_components')
    op.drop_table('fee_rates')
    op.drop_table('commodity_values')
    op.drop_table('calculation_steps')
    op.drop_table('producer_profiles')
    op.drop_table('material_categories')
    op.drop_table('eco_modification_rules')
    op.drop_table('calculated_fees')
    op.drop_table('jurisdictions')
    # ### end Alembic commands ###
