name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Python dependencies
      run: |
        cd backend/epr_backend
        pip install poetry
        poetry install
    
    - name: Install Node dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run Bandit security scan (Python)
      run: |
        cd backend/epr_backend
        poetry run pip install bandit[toml]
        poetry run bandit -r . -f json -o bandit-report.json || true
        poetry run bandit -r . || true
    
    - name: Run npm audit (Node.js)
      run: |
        cd frontend
        npm audit --audit-level=high || true
        npm audit --json > npm-audit.json || true
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Upload security artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          backend/epr_backend/bandit-report.json
          frontend/npm-audit.json
          trivy-results.sarif
